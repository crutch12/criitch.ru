# nginx.conf
worker_processes auto;

events {
}

http {
  server {
    listen 80;
    server_name criitch.ru  www.criitch.ru;

    # делаем переадресацию с HTTP на HTTPS
    location / {
      return 301 https://$host$request_uri;
    }

    # или проверяем, что сервер работает
    # location / {
    #   return 200 "Hello";
    # }
  }

  server {
    listen 443 ssl http2;
    server_name criitch.ru  www.criitch.ru;

    # мы уже примонтировали сертификаты в Docker Compose
    ssl_certificate     /etc/root-cert/cert.pem;
    ssl_certificate_key /etc/root-cert/key.pem;

    # location / {
    #   return 200 "Hello";
    # }

    # здесь нужно указать локальный адрес к вашему сайту.
    location / {
      proxy_pass http://front:8000;
    }
  }

  server {
    listen 443 ssl http2;
    server_name lt.criitch.ru;

    ssl_certificate     /etc/sub-cert/cert.pem;
    ssl_certificate_key /etc/sub-cert/key.pem;

    location / {
      return 200 "Localtunnel";
    }

    location ~ {
      proxy_pass http://host.docker.internal:9000;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Host $host:$server_port;
      proxy_set_header X-Forwarded-Server $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
  }

  server {
    listen 443 ssl http2;
    server_name ~^(?<subdomain>.+)\.lt\.criitch\.ru;

    ssl_certificate     /etc/sub-cert/cert.pem;
    ssl_certificate_key /etc/sub-cert/key.pem;

    # location * {
    #   return 200 "Localtunnel Subdomain";
    # }

    location ~ {
      proxy_pass http://host.docker.internal:9000;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Host $host:$server_port;
      proxy_set_header X-Forwarded-Server $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
  }
}